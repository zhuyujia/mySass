@charset "utf-8";
//-----------------------------------------------------
// common scss
// 整合常用的 mixin，%，@function
//-----------------------------------------------------

@mixin inline-block {
    display: inline-block;
    @if $lte7 {
        *display: inline;
        *zoom: 1;
    }
}
%inline-block {
    @include inline-block;
}

@mixin center-block {
    margin-right: auto;
    margin-left: auto;
}
%center-block {
    @include center-block;
}

@mixin clearfix {
    @if $lte7 {
        *zoom: 1;
    }
    &:before, &:after {
        display: table;
        content: "";
    }
    &:after {
        clear: both;
        overflow: hidden;
    }
}
%clearfix {
    @include clearfix;
}

@mixin clear {
    display: block;
    clear: both;
    overflow: hidden;
    height: 0;
    font-size: 0;
    line-height: 0;
}
%clear {
    @include clear;
}

@mixin float($float: left) {
    float: $float;
    @if $lte7 and $float != none {
        display: inline;
    }
}
%fl {
    @include float;
}
%fr {
    @include float(right);
}
%fn {
    @include float(none);
}

@mixin opacity($opacity) {
    opacity: $opacity / 100;
    @if $filter {
        filter: alpha(opacity=$opacity);
    }
}

@mixin bgcolor-alpha($bgColor) {
    background-color: $bgColor;
    @if $filter {
        filter: progid:DXImageTransform.Microsoft.gradient(enabled='true',startColorstr='#{ie-hex-str($bgColor)}', endColorstr='#{ie-hex-str($bgColor)}');
    }
    :root & {
        filter: none;
    }
}

@mixin min-height($height) {
    min-height: $height;
    height: auto !important;
    @if $lte7{
        _height: $height;
    }
}

@mixin text-ellipsis($width: 100%) {
    overflow: hidden;
    width: $width;
    white-space: nowrap;
    text-overflow: ellipsis;
}
%text-ellipsis {
    @include text-ellipsis;
}